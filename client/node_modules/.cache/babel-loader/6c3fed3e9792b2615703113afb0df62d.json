{"ast":null,"code":"// const API_URL = \"http://localhost:8000/v1\";\nconst API_URL = \"v1\"; // Load planets and return as JSON.\n\nasync function httpGetPlanets() {\n  const response = await fetch(`${API_URL}/planets`);\n  return await response.json();\n} // Load launches, sort by flight number, and return as JSON.\n\n\nasync function httpGetLaunches() {\n  const response = await fetch(`${API_URL}/launches`);\n  const fetchedLaunches = await response.json();\n  return fetchedLaunches.sort((a, b) => {\n    return a.flightNumber - b.flightNumber;\n  });\n} // Submit given launch data to launch system.\n\n\nasync function httpSubmitLaunch(launch) {\n  try {\n    return await fetch(`${API_URL}/launches`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(launch)\n    });\n  } catch (err) {\n    return {\n      ok: false\n    };\n  }\n} // Delete launch with given ID.\n\n\nasync function httpAbortLaunch(id) {\n  try {\n    return await fetch(`${API_URL}/launches/${id}`, {\n      method: \"delete\"\n    });\n  } catch (err) {\n    console.log(err);\n    return {\n      ok: false\n    };\n  }\n}\n\nexport { httpGetPlanets, httpGetLaunches, httpSubmitLaunch, httpAbortLaunch };","map":{"version":3,"names":["API_URL","httpGetPlanets","response","fetch","json","httpGetLaunches","fetchedLaunches","sort","a","b","flightNumber","httpSubmitLaunch","launch","method","headers","body","JSON","stringify","err","ok","httpAbortLaunch","id","console","log"],"sources":["/Users/boamatule/Projects/nasa_nodejs_project/client/src/hooks/requests.js"],"sourcesContent":["// const API_URL = \"http://localhost:8000/v1\";\nconst API_URL = \"v1\";\n\n// Load planets and return as JSON.\nasync function httpGetPlanets() {\n  const response = await fetch(`${API_URL}/planets`);\n  return await response.json();\n}\n\n// Load launches, sort by flight number, and return as JSON.\nasync function httpGetLaunches() {\n  const response = await fetch(`${API_URL}/launches`);\n  const fetchedLaunches = await response.json();\n  return fetchedLaunches.sort((a, b) => {\n    return a.flightNumber - b.flightNumber;\n  });\n}\n\n// Submit given launch data to launch system.\nasync function httpSubmitLaunch(launch) {\n  try {\n    return await fetch(`${API_URL}/launches`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(launch),\n    });\n  } catch(err) {\n    return {\n      ok: false,\n    };\n  }\n}\n\n// Delete launch with given ID.\nasync function httpAbortLaunch(id) {\n  try {\n    return await fetch(`${API_URL}/launches/${id}`, {\n      method: \"delete\",\n    });\n  } catch(err) {\n    console.log(err);\n    return {\n      ok: false,\n    };\n  }\n}\n\nexport {\n  httpGetPlanets,\n  httpGetLaunches,\n  httpSubmitLaunch,\n  httpAbortLaunch,\n};"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAG,IAAhB,C,CAEA;;AACA,eAAeC,cAAf,GAAgC;EAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,OAAQ,UAAZ,CAA5B;EACA,OAAO,MAAME,QAAQ,CAACE,IAAT,EAAb;AACD,C,CAED;;;AACA,eAAeC,eAAf,GAAiC;EAC/B,MAAMH,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,OAAQ,WAAZ,CAA5B;EACA,MAAMM,eAAe,GAAG,MAAMJ,QAAQ,CAACE,IAAT,EAA9B;EACA,OAAOE,eAAe,CAACC,IAAhB,CAAqB,CAACC,CAAD,EAAIC,CAAJ,KAAU;IACpC,OAAOD,CAAC,CAACE,YAAF,GAAiBD,CAAC,CAACC,YAA1B;EACD,CAFM,CAAP;AAGD,C,CAED;;;AACA,eAAeC,gBAAf,CAAgCC,MAAhC,EAAwC;EACtC,IAAI;IACF,OAAO,MAAMT,KAAK,CAAE,GAAEH,OAAQ,WAAZ,EAAwB;MACxCa,MAAM,EAAE,MADgC;MAExCC,OAAO,EAAE;QACP,gBAAgB;MADT,CAF+B;MAKxCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,MAAf;IALkC,CAAxB,CAAlB;EAOD,CARD,CAQE,OAAMM,GAAN,EAAW;IACX,OAAO;MACLC,EAAE,EAAE;IADC,CAAP;EAGD;AACF,C,CAED;;;AACA,eAAeC,eAAf,CAA+BC,EAA/B,EAAmC;EACjC,IAAI;IACF,OAAO,MAAMlB,KAAK,CAAE,GAAEH,OAAQ,aAAYqB,EAAG,EAA3B,EAA8B;MAC9CR,MAAM,EAAE;IADsC,CAA9B,CAAlB;EAGD,CAJD,CAIE,OAAMK,GAAN,EAAW;IACXI,OAAO,CAACC,GAAR,CAAYL,GAAZ;IACA,OAAO;MACLC,EAAE,EAAE;IADC,CAAP;EAGD;AACF;;AAED,SACElB,cADF,EAEEI,eAFF,EAGEM,gBAHF,EAIES,eAJF"},"metadata":{},"sourceType":"module"}